syntax = "proto2";

import "types.proto";
package node;

message AppendEntriesRequest {
  required types.Vote vote = 1;
  optional types.LogId prev_log_id = 2;
  repeated types.Entry entries = 3;
  optional types.LogId leader_commit = 4;
}

message Success {}
message PartialSuccess { optional types.LogId upto = 1; }
message Conflict {}
message HigherVote { required types.Vote mine = 1; }

message AppendEntriesResponse {
  oneof status {
    Success success = 1;
    PartialSuccess partial_success = 2;
    Conflict conflict = 3;
    HigherVote higher_vote = 4;
  }
}

message VoteRequest {
  required types.Vote vote = 1;
  optional types.LogId last_log_id = 2;
}

message VoteResponse {
  required types.Vote vote = 1;
  required bool vote_granted = 2;
  optional types.LogId last_log_id = 3;
}

message SnapshotRequest {
  required types.Vote vote = 1;
  required types.Snapshot snapshot = 2;
}

message SnapshotResponse { required types.Vote vote = 1; }

service RaftService {
  rpc AppendEntries(AppendEntriesRequest) returns (AppendEntriesResponse);
  rpc Vote(VoteRequest) returns (VoteResponse);
  rpc InstallSnapshot(SnapshotRequest) returns (SnapshotResponse);
}
